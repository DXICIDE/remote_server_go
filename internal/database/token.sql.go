// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: token.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createTokens = `-- name: CreateTokens :one
INSERT INTO refresh_tokens (token, created_at, updated_at, user_id, expires_at)
VALUES (
    $1,
    now(),
    now(),
    $2,
    now() + interval '60 days'
)
RETURNING token, created_at, updated_at, user_id, expires_at, revoked_at
`

type CreateTokensParams struct {
	Token  string
	UserID uuid.UUID
}

func (q *Queries) CreateTokens(ctx context.Context, arg CreateTokensParams) (RefreshToken, error) {
	row := q.db.QueryRowContext(ctx, createTokens, arg.Token, arg.UserID)
	var i RefreshToken
	err := row.Scan(
		&i.Token,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.UserID,
		&i.ExpiresAt,
		&i.RevokedAt,
	)
	return i, err
}
